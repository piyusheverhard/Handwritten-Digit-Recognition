import cv2
import numpy as np
import matplotlib.pyplot as plt

def preprocess_image(image_path, custom_threshold_value):
    # Read the image
    img = cv2.imread(image_path, cv2.IMREAD_GRAYSCALE)

    # Show the original image
    plt.imshow(img, cmap='gray')
    plt.title('Original Image')
    plt.show()

    # Resize the image to 28x28
    img_resized = cv2.resize(img, (28, 28), interpolation=cv2.INTER_AREA)

    # Invert the resized image
    img_resized_inverted = cv2.bitwise_not(img_resized)

    # Show the resized image
    plt.imshow(img_resized_inverted, cmap='gray')
    plt.title('Resized and Inverted Image')
    plt.show()

    # Apply threshold to convert it into black and white
    _, img_threshold = cv2.threshold(img_resized_inverted, custom_threshold_value, 255, cv2.THRESH_BINARY)

    # Show the thresholded image
    plt.imshow(img_threshold, cmap='gray')
    plt.title('Thresholded Image')
    plt.show()

    # Convert the image to a matrix of 0 and 1
    img_matrix = img_threshold / 255

    return img_matrix

# Replace 'path_to_image' with the path to your image
for i in range(10):
    image_path = './' + str(i) + '.jpeg'
    custom_threshold_value = 90
    processed_image = preprocess_image(image_path, custom_threshold_value)
    print(processed_image)
